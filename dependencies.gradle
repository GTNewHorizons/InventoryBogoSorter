//file:noinspection DependencyNotationArgument
// TODO remove when fixed in RFG ^
/*
 * Add your dependencies here. Supported configurations:
 *  - api("group:name:version:classifier"): if you use the types from this dependency in the public API of this mod
 *       Available at runtime and compiletime for mods depending on this mod
 *  - implementation("g:n:v:c"): if you need this for internal implementation details of the mod, but none of it is visible via the public API
 *       Available at runtime but not compiletime for mods depending on this mod
 *  - compileOnly("g:n:v:c"): if the mod you're building doesn't need this dependency during runtime at all, e.g. for optional mods
 *       Not available at all for mods depending on this mod, only visible at compiletime for this mod
 *  - compileOnlyApi("g:n:v:c"): like compileOnly, but also visible at compiletime for mods depending on this mod
 *       Available at compiletime but not runtime for mods depending on this mod
 *  - runtimeOnlyNonPublishable("g:n:v:c"): if you want to include a mod in this mod's runClient/runServer runs, but not publish it as a dependency
 *       Not available at all for mods depending on this mod, only visible at runtime for this mod
 *  - devOnlyNonPublishable("g:n:v:c"): a combination of runtimeOnlyNonPublishable and compileOnly for dependencies present at both compiletime and runtime,
 *       but not published as Maven dependencies - useful for RFG-deobfuscated dependencies or local testing
 *  - runtimeOnly("g:n:v:c"): if you don't need this at compile time, but want it to be present at runtime
 *       Available at runtime for mods depending on this mod
 *  - annotationProcessor("g:n:v:c"): mostly for java compiler plugins, if you know you need this, use it, otherwise don't worry
 *  - testCONFIG("g:n:v:c") - replace CONFIG by one of the above (except api), same as above but for the test sources instead of main
 *
 *  - shadowImplementation("g:n:v:c"): effectively the same as API, but the dependency is included in your jar under a renamed package name
 *       Requires you to enable usesShadowedDependencies in gradle.properties
 *       For more info, see https://github.com/GregTechCEu/Buildscripts/blob/master/docs/shadow.md
 *
 * You can exclude transitive dependencies (dependencies of the chosen dependency) by appending { transitive = false } if needed,
 * but use this sparingly as it can break using your mod as another mod's dependency if you're not careful.
 *
 * To depend on obfuscated jars you can use `devOnlyNonPublishable(rfg.deobf("dep:spec:1.2.3"))` to fetch an obfuscated jar from maven,
 * or `devOnlyNonPublishable(rfg.deobf(project.files("libs/my-mod-jar.jar")))` to use a file.
 *
 * To add a mod with CurseMaven, replace '("g:n:v:c")' in the above with 'rfg.deobf("curse.maven:project_slug-project_id:file_id")'
 * Example: devOnlyNonPublishable(rfg.deobf("curse.maven:top-245211:2667280"))
 *
 * Gradle names for some of the configuration can be misleading, compileOnlyApi and runtimeOnly both get published as dependencies in Maven, but compileOnly does not.
 * The buildscript adds runtimeOnlyNonPublishable to also have a runtime dependency that's not published.
 *
 * For more details, see https://docs.gradle.org/8.4/userguide/java_library_plugin.html#sec:java_library_configurations_graph
 */
dependencies {
    api("com.github.GTNewHorizons:ModularUI2:2.2.2-1.7.10:dev")
    api("com.github.GTNewHorizons:ModularUI:1.2.17:dev")
    api("com.github.GTNewHorizons:GTNHLib:0.6.8:dev")

    // used for chunk claim checking
    compileOnly("com.github.GTNewHorizons:ServerUtilities:2.1.17:dev")

    compileOnly("com.github.GTNewHorizons:ProjectRed:4.11.0-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:AdventureBackpack2:1.3.2-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:Minecraft-Backpack-Mod:2.5.0-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:Galacticraft:3.3.4-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:EnderIO:2.9.2:dev")
    compileOnly("com.github.GTNewHorizons:ironchest:6.1.1:dev")
    compileOnly("com.github.GTNewHorizons:Avaritiaddons:1.8.4-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:CookingForBlockheads:1.4.0-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:ForestryMC:4.10.1:dev")
    compileOnly("com.github.GTNewHorizons:Draconic-Evolution:1.4.5-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:Applied-Energistics-2-Unofficial:rv3-beta-533-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:EnderStorage:1.7.0:dev")
    compileOnly("com.github.GTNewHorizons:TinkersConstruct:1.13.8-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:CodeChickenCore:1.4.1:dev")
    compileOnly("com.github.GTNewHorizons:NotEnoughItems:2.7.27-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:GT5-Unofficial:5.09.51.105:dev")
    compileOnly("com.github.GTNewHorizons:Botania:1.12.5-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:StorageDrawers:2.1.0-GTNH:dev")
    compileOnly("com.github.GTNewHorizons:Backhand:1.6.7:dev")

    runtimeOnlyNonPublishable("com.github.GTNewHorizons:waila:1.8.2:dev")

    compileOnly rfg.deobf('curse.maven:projecte-226410:2340786')
    compileOnly rfg.deobf('curse.maven:rftools-224641:2287287')
    compileOnly rfg.deobf("curse.maven:mcjtylib-233105:2272449")
    compileOnly rfg.deobf('curse.maven:thermal_expansion-69163:2388758')
    compileOnly rfg.deobf('curse.maven:thermal_foundation-222880:2388752')
    compileOnly rfg.deobf('curse.maven:cofh_core-69162:2388750')
    compileOnly rfg.deobf('curse.maven:et-futurum-requiem-441392:5873837')
    compileOnly rfg.deobf('curse.maven:bibliocraft-228027:2423369')
    compileOnly rfg.deobf('curse.maven:mekanism-ce-399904:5988091')
    compileOnly rfg.deobf('curse.maven:immersive-engineering-231951:2299019')
    compileOnly rfg.deobf('curse.maven:the-betweenlands-243363:2317389')
    compileOnly rfg.deobf('curse.maven:terrafirmacraft-302973:2627990')
    compileOnly rfg.deobf('curse.maven:energy-control-373450:4776055')
    compileOnly rfg.deobf('curse.maven:industrial-craft-242638:2353971')
    compileOnly rfg.deobf('curse.maven:extra-utilities-225561:2264383')
    compileOnly rfg.deobf('curse.maven:hbms-nuclear-tech-mod-235439:6028711')
    compileOnly rfg.deobf('curse.maven:better-storage-232919:2248061')

}
